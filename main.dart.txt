// main.dart
import 'package:flutter/material.dart';

void main() => runApp(const CourseDashboardApp());

class CourseDashboardApp extends StatelessWidget {
  const CourseDashboardApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Course Dashboard',
      theme: ThemeData(primarySwatch: Colors.teal),
      home: const HomeWrapper(),
    );
  }
}

class HomeWrapper extends StatefulWidget {
  const HomeWrapper({super.key});

  @override
  State<HomeWrapper> createState() => _HomeWrapperState();
}

class _HomeWrapperState extends State<HomeWrapper> {
  int _currentIndex = 0;

  final List<Widget> _tabs = const [
    HomeTab(),
    CoursesTab(),
    ProfileTab(),
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: _tabs[_currentIndex],
      bottomNavigationBar: BottomNavigationBar(
        currentIndex: _currentIndex,
        onTap: (i) => setState(() => _currentIndex = i),
        items: const [
          BottomNavigationBarItem(icon: Icon(Icons.home), label: 'Home'),
          BottomNavigationBarItem(icon: Icon(Icons.book), label: 'Courses'),
          BottomNavigationBarItem(icon: Icon(Icons.person), label: 'Profile'),
        ],
      ),
    );
  }
}

// ---------- Tabs ----------
class HomeTab extends StatelessWidget {
  const HomeTab({super.key});

  @override
  Widget build(BuildContext context) {
    return Center(
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          const Text('Home Tab', style: TextStyle(fontSize: 24)),
          const SizedBox(height: 20),
          ElevatedButton(
            onPressed: () => _askExit(context),
            child: const Text('Logout'),
          ),
        ],
      ),
    );
  }

  void _askExit(BuildContext context) {
    showDialog<bool>(
      context: context,
      builder: (_) => AlertDialog(
        title: const Text('Exit?'),
        content: const Text('Are you sure you want to exit the app?'),
        actions: [
          TextButton(
            onPressed: () => Navigator.pop(context, false),
            child: const Text('No'),
          ),
          TextButton(
            onPressed: () => Navigator.pop(context, true),
            child: const Text('Yes'),
          ),
        ],
      ),
    ).then((exit) {
      if (exit == true) {
        // In real apps you could call SystemNavigator.pop();
        // For demo we just pop the current route.
        Navigator.of(context).pop();
      }
    });
  }
}

class CoursesTab extends StatefulWidget {
  const CoursesTab({super.key});

  @override
  State<CoursesTab> createState() => _CoursesTabState();
}

class _CoursesTabState extends State<CoursesTab>
    with SingleTickerProviderStateMixin {
  final List<Map<String, dynamic>> _courses = [
    {'name': 'Physics 101', 'instructor': 'Dr. Smith', 'icon': Icons.science},
    {'name': 'History', 'instructor': 'Ms. Lee', 'icon': Icons.history_edu},
    {'name': 'Art & Design', 'instructor': 'Prof. Diaz', 'icon': Icons.palette},
    {'name': 'Math', 'instructor': 'Mr. Clark', 'icon': Icons.calculate},
    {'name': 'CS 102', 'instructor': 'Dr. Kim', 'icon': Icons.computer},
  ];

  String? _selectedCategory;

  late AnimationController _controller;
  bool _isEnlarged = false;

  @override
  void initState() {
    super.initState();
    _controller = AnimationController(
      duration: const Duration(milliseconds: 200),
      vsync: this,
    );
  }

  @override
  void dispose() {
    _controller.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.all(16),
      child: Column(
        children: [
          // a. Course ListView
          Expanded(
            child: ListView.builder(
              itemCount: _courses.length,
              itemBuilder: (_, i) {
                final c = _courses[i];
                return Card(
                  child: ListTile(
                    leading: Icon(c['icon']),
                    title: Text(c['name']),
                    subtitle: Text('Instructor: ${c['instructor']}'),
                  ),
                );
              },
            ),
          ),
          const SizedBox(height: 10),

          // e. Category dropdown
          DropdownButton<String>(
            hint: const Text('Select category'),
            value: _selectedCategory,
            items: ['Science', 'Arts', 'Technology']
                .map((cat) => DropdownMenuItem(value: cat, child: Text(cat)))
                .toList(),
            onChanged: (val) => setState(() => _selectedCategory = val),
          ),
          if (_selectedCategory != null)
            Text('Selected: $_selectedCategory',
                style: const TextStyle(fontSize: 16)),
          const SizedBox(height: 20),

          // d. Animated action button
          GestureDetector(
            onTap: () {
              setState(() => _isEnlarged = !_isEnlarged);
              _isEnlarged ? _controller.forward() : _controller.reverse();
            },
            child: AnimatedScale(
              scale: _isEnlarged ? 1.5 : 1.0,
              duration: const Duration(milliseconds: 200),
              child: FloatingActionButton(
                onPressed: () {},
                child: const Icon(Icons.add),
              ),
            ),
          ),
        ],
      ),
    );
  }
}

class ProfileTab extends StatelessWidget {
  const ProfileTab({super.key});

  @override
  Widget build(BuildContext context) {
    return const Center(
      child: Text('Profile Tab', style: TextStyle(fontSize: 24)),
    );
  }
}